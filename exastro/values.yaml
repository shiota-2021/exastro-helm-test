# Default values for Exastro.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  itaGlobalDefinition:
    name: ita-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-it-automation
    config:
      DEFAULT_LANGUAGE: "ja"
      LANGUAGE: "en"
      CONTAINER_BASE: "kubernetes"
      TZ: "Asia/Tokyo"
      STORAGEPATH: "/storage/"
    secret:
      ENCRYPT_KEY: ""
    persistence:
      enabled: true
      accessMode: ReadWriteMany
      size: 10Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  gitlabDefinition:
    name: gitlab
    enabled: true
    config:
      GITLAB_PROTOCOL: "http"
      GITLAB_HOST: "gitlab"
      GITLAB_PORT: "80"
    secret:
      GITLAB_ROOT_TOKEN: ""
  itaDatabaseDefinition:
    name: ita-database
    enabled: true
    config:
      DB_VENDOR: "mariadb"
      DB_HOST: "mariadb"
      DB_PORT: "3306"
      DB_DATABASE: "ITA_DB"
    secret:
      DB_ADMIN_USER: ""
      DB_ADMIN_PASSWORD: ""
      DB_USER: ""
      DB_PASSWORD: ""
  authGlobalDefinition:
    name: auth-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-platform
    config:
      DEFAULT_LANGUAGE: "ja"
      LANGUAGE: "en"
      TZ: "Asia/Tokyo"
      PYTHONIOENCODING: utf-8
      PLATFORM_API_PROTOCOL: "http"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
      PLATFORM_WEB_PROTOCOL: "http"
      PLATFORM_WEB_HOST: "platform-web"
      PLATFORM_WEB_PORT: "8000"
    secret:
      ENCRYPT_KEY: ""
    persistence:
      enabled: true
      accessMode: ReadWriteMany
      size: 10Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  keycloakDefinition:
    name: keycloak
    enabled: true
    config:
      API_KEYCLOAK_PROTOCOL: "http"
      API_KEYCLOAK_HOST: "keycloak"
      API_KEYCLOAK_PORT: "8080"
      KEYCLOAK_PROTOCOL: "http"
      KEYCLOAK_HOST: "keycloak"
      KEYCLOAK_PORT: "8080"
      KEYCLOAK_MASTER_REALM: "master"
      KEYCLOAK_DB_DATABASE: "keycloak"
    secret:
      KEYCLOAK_USER: ""
      KEYCLOAK_PASSWORD: ""
      KEYCLOAK_DB_USER: ""
      KEYCLOAK_DB_PASSWORD: ""
  itaDefinition:
    name: ita
    enabled: true
    config:
      ITA_WEB_PROTOCOL: "http"
      ITA_WEB_HOST: "ita-web-server"
      ITA_WEB_PORT: "8000"
      ITA_API_PROTOCOL: "http"
      ITA_API_HOST: "ita-api-organization"
      ITA_API_PORT: "8080"
      ITA_API_ADMIN_PROTOCOL: "http"
      ITA_API_ADMIN_HOST: "ita-api-admin"
      ITA_API_ADMIN_PORT: "8080"
  authDatabaseDefinition:
    name: auth-database
    enabled: true
    config:
      DB_VENDOR: "mariadb"
      DB_HOST: "mariadb"
      DB_PORT: "3306"
      DB_DATABASE: "platform"
    secret:
      DB_ADMIN_USER: ""
      DB_ADMIN_PASSWORD: ""
      DB_USER: ""
      DB_PASSWORD: ""
  databaseDefinition:
    name: mariadb
    enabled: true
    secret:
      MARIADB_ROOT_PASSWORD: ""
    persistence:
      enabled: true
      reinstall: false
      accessMode: ReadWriteOnce
      size: 20Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}

exastro-it-automation:
  ita-api-admin:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-api-admin"
      tag: "beta.3b2607.20230126-183122"
      pullPolicy: IfNotPresent
    extraEnv:
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"

  ita-api-organization:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-api-organization"
      tag: "beta.3b2607.20230126-183120"
      pullPolicy: IfNotPresent
    extraEnv:
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"

  ita-by-ansible-execute:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-by-ansible-execute"
      tag: "beta.3b2607.20230126-183123"
      pullPolicy: IfNotPresent
    extraEnv:
      EXECUTE_INTERVAL: "10"
      ANSIBLE_AGENT_IMAGE: "exastro/exastro-it-automation-by-ansible-agent"
      ANSIBLE_AGENT_IMAGE_TAG: "beta.3b2607.20230126-183119"
    serviceAccount:
      create: false
      name: "ita-by-ansible-execute-sa"

  ita-by-ansible-legacy-role-vars-listup:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
    image:
      repository: "exastro/exastro-it-automation-by-ansible-legacy-role-vars-listup"
      tag: "beta.3b2607.20230126-183124"
      pullPolicy: IfNotPresent

  ita-by-ansible-towermaster-sync:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
    image:
      repository: "exastro/exastro-it-automation-by-ansible-towermaster-sync"
      tag: "beta.3b2607.20230126-183118"
      pullPolicy: IfNotPresent

  ita-by-conductor-synchronize:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
    image:
      repository: "exastro/exastro-it-automation-by-conductor-synchronize"
      tag: "beta.3b2607.20230126-183125"
      pullPolicy: IfNotPresent

  ita-by-menu-create:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
    image:
      repository: "exastro/exastro-it-automation-by-menu-create"
      tag: "beta.3b2607.20230126-183242"
      pullPolicy: IfNotPresent

  ita-database-setup-job:
    image:
      repository: ""
      tag: ""
      pullPolicy: IfNotPresent

  ita-web-server:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-web-server"
      tag: "beta.3b2607.20230126-183127"
      pullPolicy: IfNotPresent

exastro-platform:
  platform-api:
    image:
      repository: "exastro/exastro-platform-api"
      tag: "1.3.beta.167343.20230126-164540"

  platform-auth:
    ingress:
      enabled: true
      hosts:
        - host: exastro-suite.example.local
          paths:
            - path: /
              pathType: Prefix
              backend: "http"
        - host: exastro-suite-mng.example.local
          paths:
            - path: /
              pathType: Prefix
              backend: "httpMng"
    service:
      type: ClusterIP
      # http:
      #   nodePort: 30080
      # httpMng:
      #   nodePort: 30081
    image:
      repository: "exastro/exastro-platform-auth"
      tag: "1.3.beta.167343.20230126-164115"

  platform-setup:
    keycloak:
      image:
        repository: "exastro/exastro-platform-job"
        tag: "1.3.beta.167343.20230126-164540"

  platform-web:
    image:
      repository: "exastro/exastro-platform-web"
      tag: "1.3.beta.167343.20230126-164658"

  mariadb:
    image:
      repository: "mariadb"
      tag: "10.9"
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "256Mi"
        cpu: "1m"
      limits:
        memory: "2Gi"
        cpu: "4"

  keycloak:
    image:
      repository: "exastro/keycloak"
      tag: "1.3.beta.167343.20230126-164115"
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "256Mi"
        cpu: "1m"
      limits:
        memory: "2Gi"
        cpu: "4"